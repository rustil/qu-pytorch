ARG CUDA=cuda:10.2-devel-ubuntu18.04
FROM nvidia/$CUDA
SHELL ["/bin/bash", "--login", "-c"]

ENV TZ=Europe/Berlin

# To solve invoke-rc.d error for openssh
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \
&& printf '#!/bin/sh\nexit 0' > /usr/sbin/policy-rc.d \
&& apt-get update \
&& apt-get install -y software-properties-common \
&& add-apt-repository ppa:ubuntu-toolchain-r/test \
&& apt-get update \
&& apt-get install -y ssh \
    gcc-8 \
    g++-8 \
    cmake \
    wget \
    tmux \
    clang \
    rsync \
    tar \
    dirmngr\
    unzip \
    curl \
    sudo \
    nano \
&& update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8 \
&&  apt-get install --no-install-recommends -y \
    software-properties-common \
&& apt-get clean

ENV PATH="/opt/miniconda-latest/bin:${PATH}"
ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"

COPY ./common-torch.yml /opt

RUN chmod 777 /opt && chmod a+s /opt && cd /opt \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    && conda init bash \
    && conda env create -n common-torch --file common-torch.yml \
    && conda clean -a -y \
    && rm -rf ~/.cache/pip/* \
    && ln -s /opt/miniconda-latest/etc/profile.d/conda.sh /etc/profile.d/conda.sh

# Install Nvidia-Apex
ARG APEXDIR=/opt/apex
ARG APEXCOMMIT=e2083df5eb96643c61613b9df48dd4eea6b07690

RUN source /etc/profile.d/conda.sh \
    && conda activate common-torch \
    && mkdir $APEXDIR \
    && chmod 777 $APEXDIR \
    && cd $APEXDIR \
    && wget https://github.com/NVIDIA/apex/archive/$APEXCOMMIT.zip \
    && unzip $APEXCOMMIT.zip \
    && rm $APEXCOMMIT.zip \
    && mv apex-$APEXCOMMIT apex && cd apex \
    && pip install -v --disable-pip-version-check --no-cache-dir --global-option="--cpp_ext" --global-option="--cuda_ext" ./

RUN useradd -m user \
  && yes password | passwd user \
  && chmod -R 777 /home/user \
  && echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user

USER user

COPY ./entrypoint.sh /usr/local/bin
RUN sudo chmod 777 /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
